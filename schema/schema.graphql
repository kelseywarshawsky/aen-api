type CharacterDescription {
  height: String
  weight: String
  age: Int
  hair: String
  eyes: String
  additionalFeatures: String
}

input CharacterDescriptionInput {
  height: String
  weight: String
  age: Int
  hair: String
  eyes: String
  additionalFeatures: String
}

input CreateCharacterInput {
  userId: String!
  name: String!
  campaignIds: [String!]
  ancestry: String
  bloodline: String
  lifePathIds: [String]
  languages: [String!]
  isReady: Boolean!
  heritage: String
}

type Character {
  id: String!
  userId: String!
  name: String!
  campaignIds: [String!]!
  ancestry: String!
  bloodline: String
  lifePathIds: [String]
  languages: [String!]
  isReady: Boolean!
  class: String
  tradition: String
}

type Story {
  characterId: String!
  isBackstory: Boolean!
  notes: String
  inGameDate: String
  sessionDate: String
}

type TestData {
  name: String!
}

input Test {
  name: String!
}

type Mutation {
  createCharacter(input: CreateCharacterInput!): Character
  testMutation(input: Test!): String!
}

type Query {
  getCharacters: [Character]
  getCharacter(id: Int!): Character
}
